import Env from "./Env";

const development = Env.API_Production_URL;

const API_ROUTE_PATHS = {
  register: `${development}/users/register`,
  login: `${development}/users/login`,
  loginAsGuest: `${development}/users/login-as-guest`,
  logout: `${development}/users/logout`,
  sendEmailVerificationCode: `${development}/users/register/send-verification-code`,
  resendEmailVerificationCode: `${development}/users/register/resend-verification-code`,
  verifyCode: `${development}/users/register/verify-code`,
  sendResetPasswordLink: `${development}/users/login/send-reset-password-link`,
  resetPassword: `${development}/users/login/reset-password`,
  getResetPasswordCredential: `${development}/users/login/reset-password/get/reset-password-credential`,
  getRegistrationCredential: `${development}/users/register/get/registration-credential`,
  getUserData: `${development}/users/login/get/user-data`,
  getUserFriendsData: `${development}/users/profile/friends/get/user-friends-data`,
  getUserNotifications: `${development}/users/profile/get/user-notifications`,
  editPersonalDetails: `${development}/users/profile/edit-personal-details`,
  editUserAvatar: `${development}/users/profile/edit-user-avatar`,
  editUserBanner: `${development}/users/profile/edit-user-banner`,
  searchUsers: `${development}/users/profile/friends/search-users`,
  sendFriendRequest: `${development}/users/profile/friends/send-friend-request`,
  getUserFriendRequestsData: `${development}/users/profile/friends/get/friend-requests-data`,
  acceptFriendRequest: `${development}/users/profile/friends/accept-friend-request`,
  unfollowFriend: `${development}/users/profile/friends/unfollow-friend`,
  cancelNotification: `${development}/users/profile/cancel-notification`,
  changeUserPreferenceLanguage: `${development}/users/setting/change-preference-language`,
  changeUserPreferenceFontSize: `${development}/users/setting/change-preference-font-size`,
  changeUserPreferenceTheme: `${development}/users/setting/change-preference-theme`,
  changeUserPreferenceColorblind: `${development}/users/setting/change-preference-colorblind`,
  changePassword: `${development}/users/setting/change-password`,
  sendChangeEmailLink: `${development}/users/setting/send-change-email-link`,
  changeEmail: `${development}/users/setting/change-email`,
  getToiletsLocationNearby: `${development}/map/get-toilets-location-nearby`,
  updateToiletRating: `${development}/map/update-toilet-rating`,
  updateToiletViews: `${development}/map/update-toilet-views`,
  addToiletComment: `${development}/map/add-toilet-comment`,
  updateToiletBookmark: `${development}/map/update-toilet-bookmark`,
  getAllVerifiedToiletData: `${development}/map/get/all-verified-toilet-data`,
  addToilet: `${development}/map/add-toilet`,
  addToiletMultimedia: `${development}/map/add-toilet-multimedia`,
  getAllNonVerifiedToiletsData: `${development}/admin/get/all-non-verified-toilets-data`,
  deleteNonVerifiedToilet: `${development}/admin/delete/non-verified-toilet`,
  approveNonVerifiedToilet: `${development}/admin/approve-non-verified-toilet`,
  likeToiletMultimedia: `${development}/map/like-toilet-multimedia`,
  addMultimediaComment: `${development}/map/add-multimedia-comment`,
  getRewardsData: `${development}/users/get/rewards-data`,
  exchangeReward: `${development}/users/exchange-reward`,
  getAllNonVerifiedMultimedia: `${development}/admin/get/all-non-verified-multimedia`,
  approveNonVerifiedMultimedia: `${development}/admin/approve-non-verified-multimedia`,
  deleteNonVerifiedMultimedia: `${development}/admin/delete/non-verified-multimedia`,
  changePreferenceMarker: `${development}/map/change-preference-marker`,
};

export default API_ROUTE_PATHS;
